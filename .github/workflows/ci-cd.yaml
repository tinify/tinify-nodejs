name: Node CI/CD

on: [push, pull_request]

permissions: {}
jobs:
  Unit_tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        node: [14, 16, 18, 20, 22, 24]
        os: [ubuntu-latest, macOS-latest, windows-latest]
        exclude:
        - node: 14
          os: macOS-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - run: npm install
      - run: npm test

  Integration_tests:
    if: github.event_name == 'push'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    needs: Unit_tests
    strategy:
      fail-fast: false
      matrix:
        node: [14, 16, 18, 20, 22, 24]
        os: [ubuntu-latest, macOS-latest, windows-latest]
        exclude:
        - node: 14
          os: macOS-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies
        run: npm install
      - name: Run test suite
        env:
          TINIFY_KEY: ${{ secrets.TINIFY_KEY }}
        run: npm run integration

  Publish:
    if: |
      github.repository == 'tinify/tinify-nodejs' &&
      startsWith(github.ref, 'refs/tags') &&
      github.event_name == 'push'
    timeout-minutes: 10
    needs: [Unit_tests, Integration_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up node
        uses: actions/setup-node@v4
        with:
            node-version: "22.x"
            registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: npm install
      - name: Check if properly tagged
        run: |
            PACKAGE_VERSION="$(jq '.version' -r < package.json)";
            CURRENT_TAG="${GITHUB_REF#refs/*/}";
            if  [[ "${PACKAGE_VERSION}" != "${CURRENT_TAG}" ]]; then
              >&2 echo "Tag mismatch"
              >&2 echo "Version in package.json (${PACKAGE_VERSION}) does not match the current tag=${CURRENT_TAG}"
              >&2 echo "Skipping deploy"
              exit 1;
            fi
      - name: TS compile
        run: npx tsc
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
